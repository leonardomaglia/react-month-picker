{"version":3,"sources":["components/MonthPicker/MonthPicker.styled.js","components/MonthPicker/Selector/Selector.styled.js","components/MonthPicker/Selector/Selector.js","components/MonthPicker/MonthPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Selected","styled","div","TitleWrapper","SelectedText","Modal","Presets","MonthPicker","Title","Preset","YearPicker","YearTitle","Months","Month","props","highlightCol","disabled","Selector","presets","onChange","description","locale","useState","yearIndex","setYearIndex","years","setYears","selected","setSelected","useEffect","ys","year","months","map","month","date","moment","toDate","push","Number","format","length","p","i","onClick","e","start","end","pickPreset","title","icon","faChevronCircleLeft","style","width","height","opacity","cursor","faChevronCircleRight","m","className","isSameOrAfter","isSameOrBefore","isAfter","endOf","monthIndex","isBefore","setSelectedLocal","toLocaleDateString","memo","value","emptyDescription","closeDelay","selectOpen","setSelectOpen","setTitle","updateTitle","v","presetTitle","find","isSame","faChevronDown","startOf","setTimeout","App","subtract","margin","range","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAEaA,EAAWC,IAAOC,IAAV,4KASRC,EAAeF,IAAOC,IAAV,uJAQZE,EAAeH,IAAOC,IAAV,0B,QCjBZG,EAAQJ,IAAOC,IAAV,yWAkBLI,EAAUL,IAAOC,IAAV,wHAOPK,EAAcN,IAAOC,IAAV,qFAMXM,EAAQP,IAAOC,IAAV,4FAMLO,EAASR,IAAOC,IAAV,yFAMNQ,EAAaT,IAAOC,IAAV,yGAMVS,EAAYV,IAAOC,IAAV,kDAITU,EAASX,IAAOC,IAAV,2HAONW,EAAQZ,IAAOC,IAAV,oWAUM,SAAAY,GAAK,OAAIA,EAAMC,aAAeD,EAAMC,aAAe,aAGvD,SAAAD,GAAK,OAAIA,EAAME,SAAW,OAAS,UAC1C,SAAAF,GAAK,OAAIA,EAAME,SAAW,GAAM,KACjC,SAAAF,GAAK,OAAIA,EAAME,SAAW,UAAY,a,qBC1D5CC,EAAW,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,SAAUJ,EAAwC,EAAxCA,aAAcK,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAChE,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAER,IADA,IAAIC,EAAK,GADK,WAELC,GACP,IAAMC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIC,KAAI,SAACC,GAE1D,MAAO,CACLP,UAAU,EACVQ,KAHSC,IAAOL,EAAO,IAAMG,EAAQ,gBAAgBG,aAMzDP,EAAGQ,KAAK,CAAEP,OAAMC,YARTD,EAAO,KAAMA,GAAQQ,OAAOH,MAASI,OAAO,SAAUT,IAAS,EAA/DA,GAUTL,EAASI,GACTN,EAAaM,EAAGW,OAAS,KACxB,IAEHZ,qBAAU,WACgB,IAApBF,EAASc,QACXtB,EAASQ,KAEV,CAACA,IAEJ,IAmBMI,EAAON,EAAMF,GAEnB,OAAKQ,EAKH,eAAC1B,EAAD,WACGa,GAAWA,EAAQuB,QAClB,eAACnC,EAAD,WACE,cAACE,EAAD,sBACCU,EAAQe,KAAI,SAACS,EAAGC,GAAJ,OACX,cAAClC,EAAD,CAAQmC,QAAS,SAACC,GAAD,OAhBR,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC3BnB,EAAY,CAACkB,EAAOC,IAeYC,CAAWN,IAAnC,SACGA,EAAEO,OADuCN,SAMlD,eAAC,EAAD,WACE,cAACnC,EAAD,UAASY,GAA4B,0BACrC,eAACV,EAAD,WACE,cAAC,IAAD,CACEwC,KAAMC,IACNC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,QAAUhC,EAAkB,EAAN,GACtBiC,OAASjC,EAAwB,UAAZ,WAEvBqB,QAAS,SAACC,GAAD,OAAQtB,EAAYC,EAAaD,EAAY,GAAK,QAE7D,cAACZ,EAAD,UAAYoB,EAAKA,OACjB,cAAC,IAAD,CACEmB,KAAMO,IACNL,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,QAAShC,IAAcE,EAAMgB,OAAS,EAAI,GAAM,EAChDe,OAAQjC,IAAcE,EAAMgB,OAAS,EAAI,UAAY,WAEvDG,QAAS,SAACC,GAAD,OACPtB,EAAYE,EAAMgB,OAAS,EAAIjB,EAAaD,EAAY,GAAK,WAInE,cAACX,EAAD,UACGmB,EAAKC,OAAOC,KAAI,SAACyB,EAAGf,GACnB,OACE,eAAC9B,EAAD,CACEE,aAAcA,EACd4C,WACiB,IAAfD,EAAE/B,UACqB,IAApBA,EAASc,QACRL,IAAOsB,EAAEvB,MAAMyB,cACbxB,IAAOT,EAAS,IAChB,UAEFS,IAAOsB,EAAEvB,MAAM0B,eAAezB,IAAOT,EAAS,IAAK,SACnD,WACA,GAENX,SAAUoB,IAAOsB,EAAEvB,MAAM2B,QAAQ1B,MAAS2B,MAAM,UAEhDnB,QAAS,SAACC,GAAD,OAlFE,SAACmB,EAAY9B,GACpC,IAAIJ,EAAE,YAAOL,GACbK,EAAGP,GAAWS,OAAOgC,GAAYrC,UAAW,EAC5CD,EAASI,GACJH,EAASc,OAGRL,IAAOT,EAAS,IAAIsC,SAAS7B,IAAOF,EAAMC,OAC5CP,EAAY,CAACD,EAAS,GAAIO,EAAMC,OAEhCP,EAAY,CAACM,EAAMC,KAAMR,EAAS,KALpCC,EAAY,CAACM,EAAMC,OA6EO+B,CAAiBvB,EAAGe,IAftC,UAiBGA,EAAE/B,SAjBL,IAiBgB+B,EAAEvB,KAAKgC,mBAAmB9C,EAAQ,CAAEa,MAAO,YAHpDS,cA3DV,MAwEIyB,iBAAKnD,GC9CLV,EAvFK,SAAC,GAUd,IATLY,EASI,EATJA,SACAkD,EAQI,EARJA,MACAnD,EAOI,EAPJA,QACAE,EAMI,EANJA,YACAkD,EAKI,EALJA,iBACAjD,EAII,EAJJA,OACA+B,EAGI,EAHJA,MACAmB,EAEI,EAFJA,WACAxD,EACI,EADJA,aAEA,EAAoCO,oBAAS,GAA7C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAA0BnD,oBAAS,GAAnC,mBAAO2B,EAAP,KAAcyB,EAAd,KAEA7C,qBAAU,WACR8C,EAAYN,KACX,IAEH,IAAMM,EAAc,SAACC,GACnB,IAAKA,GAAKA,EAAEnC,OAAS,EACnB,OAAOiC,EAASJ,GAAsC,qBAGxD,IAAMO,EACJ3D,GAAWA,EAAQuB,OACfvB,EAAQ4D,MACN,SAACpC,GAAD,OACGN,IAAOM,EAAEI,OAAOiC,OAAO3C,IAAOwC,EAAE,IAAK,UACpClC,EAAEI,QAAU8B,EAAE,MACfxC,IAAOM,EAAEK,KAAKgC,OAAO3C,IAAOwC,EAAE,IAAK,UAAYlC,EAAEK,MAAQ6B,EAAE,OAEhE,KAEN,OAAOF,EACLG,EACIA,EAAY5B,MACZb,IAAOwC,EAAE,IAAIpC,OAAO,UAAY,MAAQJ,IAAOwC,EAAE,IAAIpC,OAAO,YA0BpE,OACE,eAACxC,EAAD,CAAUoD,MAAOA,EAAjB,UACE,eAACjD,EAAD,CAAcyC,QAAS,SAACC,GAAD,OAAO4B,GAAeD,IAA7C,UACE,cAACpE,EAAD,UAAe6C,IACf,cAAC,IAAD,CACEC,KAAM8B,IACN5B,MAAO,CACLC,MAAO,GACPC,OAAQ,SAIbkB,GACC,cAAC,EAAD,CACEpD,YAAaA,EACbF,QAASA,EACTG,OAAQA,EACRF,SAvCY,SAACyD,GACnBD,EAAYC,GAEY,oBAAbzD,GACTA,EAAS,CACE,OAATyD,EAAE,GACE,KACAxC,IAAOwC,EAAE,IAAIK,QAAQ,SAASzC,OAAO,uBAChC,OAAToC,EAAE,GACE,KACAxC,IAAOwC,EAAE,IAAIb,MAAM,SAASvB,OAAO,yBAI3C0C,YACE,WACET,GAAc,KAEhBF,GAA0B,MAsBtBxD,aAAcA,QC7CToE,MAvCf,WACC,IAAMjE,EAAU,CACb,CACE+B,MAAO,aACPH,MAAOV,MAAS6C,QAAQ,SAAS5C,SACjCU,IAAKX,MAAS2B,MAAM,SAAS1B,UAE/B,CACEY,MAAO,gBACPH,MAAOV,MAASgD,SAAS,EAAG,SAASH,QAAQ,SAAS5C,SACtDU,IAAKX,MAAS2B,MAAM,SAAS1B,UAE/B,CACEY,MAAO,gBACPH,MAAOV,MAASgD,SAAS,EAAG,SAASH,QAAQ,SAAS5C,SACtDU,IAAKX,MAAS2B,MAAM,SAAS1B,UAE/B,CACEY,MAAO,YACPH,MAAOV,MAAS6C,QAAQ,QAAQ5C,SAChCU,IAAKX,MAAS2B,MAAM,QAAQ1B,WAIhC,OACE,qBAAKe,MAAO,CAAEC,MAAO,IAAKgC,OAAQ,aAAlC,SACE,cAAC,EAAD,CACEtE,aAAa,OACbK,YAAY,MACZkD,iBAAiB,mBACjBjD,OAAO,QACPH,QAASA,EACTC,SAAU,SAACmE,GAAD,OAAWC,QAAQC,IAAIF,IACjCf,WAAY,SCxBLkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50b00f6f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Selected = styled.div`\n  border: #eee 1px solid;\n  border-radius: 5px;\n  position: relative;\n  user-select: none;\n  min-width: 200px;\n\tbackground-color: white;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 6px 10px;\n`;\n\nexport const SelectedText = styled.div``;\n","import styled from \"styled-components\";\n\nexport const Modal = styled.div`\n  background-color: white;\n  border: #eee 1px solid;\n  position: absolute;\n  top: 35px;\n  right: 0;\n  z-index: 99999;\n  width: 425px;\n  flex-direction: row;\n  display: flex;\n  border-radius: 5px;\n  box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);\n  @media (max-width: 425px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n\nexport const Presets = styled.div`\n  box-sizing: border-box;\n  flex: 0.5;\n  padding: 20px;\n  border-right: #eee 1px solid;\n`;\n\nexport const MonthPicker = styled.div`\n  box-sizing: border-box;\n  flex: 1;\n  padding: 20px;\n`;\n\nexport const Title = styled.div`\n  color: #575757;\n  margin: 0 0 20px 0;\n  user-select: none;\n`;\n\nexport const Preset = styled.div`\n  color: #282c34;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nexport const YearPicker = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const YearTitle = styled.div`\n  user-select: none;\n`;\n\nexport const Months = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 5px;\n  margin-top: 10px;\n`;\n\nexport const Month = styled.div`\n  border: #eee 1px solid;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: white;\n  text-align: center;\n  &:hover {\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);\n  }\n  &.selected {\n    background-color: ${props => props.highlightCol ? props.highlightCol : \"#1d7f7a\"};\n    color: white;\n  }\n  pointer-events: ${props => props.disabled ? \"none\" : \"auto\"};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  cursor: ${props => props.disabled ? \"default\" : \"pointer\"};\n  transition: .2s;\n`;\n","import moment from \"moment\";\nimport React, { memo, useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Presets,\n  MonthPicker,\n  Title,\n  Preset,\n  YearPicker,\n  YearTitle,\n  Months,\n  Month,\n} from \"./Selector.styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleLeft,\n  faChevronCircleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Selector = ({ presets, onChange, highlightCol, description, locale }) => {\n  const [yearIndex, setYearIndex] = useState(0);\n  const [years, setYears] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    let ys = [];\n    for (let year = 1990; year <= Number(moment().format(\"YYYY\")); year++) {\n      const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\n        let date = moment(year + \"-\" + month + \"-01 00:00:00\").toDate();\n        return {\n          selected: false,\n          date,\n        };\n      });\n      ys.push({ year, months });\n    }\n    setYears(ys);\n    setYearIndex(ys.length - 1);\n  }, []);\n\n  useEffect(() => {\n    if (selected.length === 2) {\n      onChange(selected);\n    }\n  }, [selected]);\n\n  const setSelectedLocal = (monthIndex, month) => {\n    let ys = [...years];\n    ys[yearIndex].months[monthIndex].selected = true;\n    setYears(ys);\n    if (!selected.length) {\n      setSelected([month.date]);\n    } else {\n      if (moment(selected[0]).isBefore(moment(month.date))) {\n        setSelected([selected[0], month.date]);\n      } else {\n        setSelected([month.date, selected[0]]);\n      }\n    }\n  };\n\n  const pickPreset = ({ start, end }) => {\n    setSelected([start, end]);\n  };\n\n  const year = years[yearIndex];\n\n  if (!year) {\n    return null;\n  }\n\n  return (\n    <Modal>\n      {presets && presets.length && (\n        <Presets>\n          <Title>PRESETS</Title>\n          {presets.map((p, i) => (\n            <Preset onClick={(e) => pickPreset(p)} key={i}>\n              {p.title}\n            </Preset>\n          ))}\n        </Presets>\n      )}\n      <MonthPicker>\n        <Title>{ description ? description : 'SELECT A MONTH RANGE:' }</Title>\n        <YearPicker>\n          <FontAwesomeIcon\n            icon={faChevronCircleLeft}\n            style={{\n              width: 20,\n              height: 20,\n              opacity: !yearIndex ? 0.2 : 1,\n              cursor: !yearIndex ? \"default\" : \"pointer\",\n            }}\n            onClick={(e) => (yearIndex ? setYearIndex(yearIndex - 1) : null)}\n          />\n          <YearTitle>{year.year}</YearTitle>\n          <FontAwesomeIcon\n            icon={faChevronCircleRight}\n            style={{\n              width: 20,\n              height: 20,\n              opacity: yearIndex === years.length - 1 ? 0.2 : 1,\n              cursor: yearIndex === years.length - 1 ? \"default\" : \"pointer\",\n            }}\n            onClick={(e) =>\n              yearIndex < years.length - 1 ? setYearIndex(yearIndex + 1) : null\n            }\n          />\n        </YearPicker>\n        <Months>\n          {year.months.map((m, i) => {\n            return (\n              <Month\n                highlightCol={highlightCol}\n                className={\n                  m.selected === true ||\n                    (selected.length === 2 &&\n                      moment(m.date).isSameOrAfter(\n                        moment(selected[0]),\n                        \"month\"\n                      ) &&\n                      moment(m.date).isSameOrBefore(moment(selected[1]), \"month\"))\n                    ? \"selected\"\n                    : \"\"\n                }\n                disabled={moment(m.date).isAfter(moment().endOf(\"month\"))}\n                key={i}\n                onClick={(e) => setSelectedLocal(i, m)}\n              >\n                {m.selected} {m.date.toLocaleDateString(locale, { month: 'short' })}\n              </Month>\n            );\n          })}\n        </Months>\n      </MonthPicker>\n    </Modal>\n  );\n};\n\nexport default memo(Selector);\n","import moment from \"moment\";\nimport React, { useState, useEffect } from \"react\";\nimport { Selected, SelectedText, TitleWrapper } from \"./MonthPicker.styled\";\nimport Selector from \"./Selector/Selector\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MonthPicker = ({\n  onChange,\n  value,\n  presets,\n  description,\n  emptyDescription,\n  locale,\n  style,\n  closeDelay,\n  highlightCol,\n}) => {\n  const [selectOpen, setSelectOpen] = useState(false);\n  const [title, setTitle] = useState(false);\n\n  useEffect(() => {\n    updateTitle(value);\n  }, []);\n\n  const updateTitle = (v) => {\n    if (!v || v.length < 2) {\n      return setTitle(emptyDescription ? emptyDescription : \"No dates selected\");\n    }\n\t\t\n    const presetTitle =\n      presets && presets.length\n        ? presets.find(\n            (p) =>\n              (moment(p.start).isSame(moment(v[0]), \"month\") ||\n                p.start === v[0]) &&\n              (moment(p.end).isSame(moment(v[1]), \"month\") || p.end === v[1])\n          )\n        : null;\n\n    return setTitle(\n      presetTitle\n        ? presetTitle.title\n        : moment(v[0]).format(\"MMM YY\") + \" - \" + moment(v[1]).format(\"MMM YY\")\n    );\n  };\n\n  const localChange = (v) => {\n    updateTitle(v);\n\n    if (typeof onChange === \"function\") {\n      onChange([\n        v[0] === null\n          ? null\n          : moment(v[0]).startOf(\"month\").format(\"YYYY-MM-DDTHH:mm:ss\"),\n        v[1] === null\n          ? null\n          : moment(v[1]).endOf(\"month\").format(\"YYYY-MM-DDTHH:mm:ss\"),\n      ]);\n    }\n\n    setTimeout(\n      () => {\n        setSelectOpen(false);\n      },\n      closeDelay ? closeDelay : 200\n    );\n  };\n\n  return (\n    <Selected style={style}>\n      <TitleWrapper onClick={(e) => setSelectOpen(!selectOpen)}>\n        <SelectedText>{title}</SelectedText>\n        <FontAwesomeIcon\n          icon={faChevronDown}\n          style={{\n            width: 14,\n            height: 14,\n          }}\n        />\n      </TitleWrapper>\n      {selectOpen && (\n        <Selector\n          description={description}\n          presets={presets}\n          locale={locale}\n          onChange={localChange}\n          highlightCol={highlightCol}\n        />\n      )}\n    </Selected>\n  );\n};\n\nexport default MonthPicker;\n","import MonthPicker from \"./components/MonthPicker/MonthPicker\";\nimport moment from \"moment\";\n\nfunction App() {\n\tconst presets = [\n    {\n      title: \"This month\",\n      start: moment().startOf(\"month\").toDate(),\n      end: moment().endOf(\"month\").toDate()\n    },\n    {\n      title: \"Past 3 months\",\n      start: moment().subtract(2, \"month\").startOf(\"month\").toDate(),\n      end: moment().endOf(\"month\").toDate()\n    },\n    {\n      title: \"Past 6 months\",\n      start: moment().subtract(5, \"month\").startOf(\"month\").toDate(),\n      end: moment().endOf(\"month\").toDate()\n    },\n    {\n      title: \"This Year\",\n      start: moment().startOf(\"year\").toDate(),\n      end: moment().endOf(\"year\").toDate()\n    }\n  ];\n\n  return (\n    <div style={{ width: 300, margin: \"50px auto\" }}>\n      <MonthPicker\n        highlightCol=\"#f60\"\n        description='Bla'\n        emptyDescription='Nada selecionado'\n        locale='pt-br'\n        presets={presets}\n        onChange={(range) => console.log(range)}\n        closeDelay={500}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}